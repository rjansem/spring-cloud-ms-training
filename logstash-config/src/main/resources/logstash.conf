input {
  beats {
    port => 5044
  }
}

filter {
	grok {
		match => {
		    "message" => "(?m)\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{HOSTNAME:host}\] \[%{DATA:thread}\] %{LOGLEVEL:logLevel} %{DATA:class}@%{DATA:method}:%{DATA:line} \- \[ANALYTICS\] \[%{DATA:username}\] \[%{DATA:service}\] \[%{DATA:operation}\]"
	    }

		overwrite => [
		    "host"
	    ]

		add_field => {
		    "code" => "%{class}@%{method}:%{line}"
	    }
	}

	date {
		match => [
			"timestamp" , "YYYY-MM-dd HH:mm:ss.SSS"
		]
		target => "@timestamp"
	}

}

filter {
	grok {
		match => {
		    "message" => "(?m)\[%{DATA}\] groupSize=%{NUMBER:groupSize}"
	    }
	}
    mutate {
        convert => { "groupSize" => "integer" }
    }
}

filter {
    if [operation] == "NewTransfer" {
        grok {
        	match => {
        	    "message" => "(?m)\[%{GREEDYDATA}\] transactionId=%{DATA:transactionId} totalAmount=%{NUMBER:totalAmount:float} paymentMode=%{DATA:paymentMode} currency=%{DATA:currency} internal=%{GREEDYDATA:internal}"
        	}
        }

        if [internal] == "true" {
            mutate {
                update => { "internal" => "Interne" }
            }
        } else {
            mutate {
                update => { "internal" => "Externe" }
            }
        }
    }
}

filter {
    if [operation] == "SignByVkb" {
        grok {
            match => {
                "message" => "(?m)\[%{GREEDYDATA}\] transactionId=%{DATA:transactionId}"
            }
        }
    }
}

filter {
    if [operation] == "Overview" and [service] == "Transaction" {
        grok {
            match => {
                "message" => "(?m)\[%{GREEDYDATA}\] page=%{NUMBER:page} pageSize=%{NUMBER:pageSize}"
            }
        }

        mutate {
            convert => { "page" => "integer" }
        }

        mutate {
            convert => { "pageSize" => "integer" }
        }
    }
}

filter {
    if [operation] == "VKB" and [service] == "Transaction" {
        grok {
            match => {
                "message" => "(?m)\[%{GREEDYDATA}\] dim=%{GREEDYDATA:dim}"
            }
        }

        mutate {
            convert => { "dim" => "string" }
        }
    }
}

filter {
    if [operation] == "Operations" and [service] == "Account" {
        grok {
            match => {
                "message" => "(?m)\[%{GREEDYDATA}\] page=%{NUMBER:page} pageSize=%{NUMBER:pageSize}"
            }
        }

        mutate {
             convert => { "page" => "integer" }
        }

        mutate {
             convert => { "pageSize" => "integer" }
        }
    }
}

filter {
    grok {
        match => {
            "monitor" => "%{DATA}/health"
        }
    }

    mutate {
        replace => { "up" => "%{up}" }
    }
}

output {
  if [up] == "true" or [up] == "false" {
      elasticsearch {
          hosts => "localhost:9200"
          index => "monitoring"
          document_type => "alert"
      }
  } else {
       elasticsearch {
           hosts => "localhost:9200"
           index => "api-microservices-%{+YYYY.MM}"
           document_type => "log"
       }
     }
}
